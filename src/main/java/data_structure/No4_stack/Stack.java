package data_structure.No4_stack;

/**
 * 栈（stack）
 *
 * 基本介绍
 * 1. 栈是一个先入后出（FILO）的有序列表。
 * 2. 栈是限制线性表中元素的插入和删除只能在线性表的同一端进行的一种特殊线性表。允许插入和删除的一端，为变化
 * 的一端，称为栈顶（Top），另一端为固定的一端，称为栈底（Bottom）。
 * 3. 根据栈的定义可知，最先放入栈中元素在栈底，最后放入的元素在栈顶，而删除元素刚好相反，最后放入的元素最先
 * 删除，最先放入的元素最后删除。
 *
 * 应用场景
 * 1. 子程序的调用：在跳往子程序前，会先将下个指令的地址存到堆栈中，直到子程序执行完后再将地址取出，以回到原
 * 来的程序中。
 * 2. 处理递归调用：和子程序的调用类似，只是除了存储下一个指令的地址外，也将参数、区域变量等数据存入堆栈中。
 * 3. 表达式的转换与求值。
 * 4. 二叉树的遍历
 * 5. 图形的深度优先（depth-first）搜索法
 */
public interface Stack {
}
